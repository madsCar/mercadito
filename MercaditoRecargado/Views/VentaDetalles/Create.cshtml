@model MercaditoRecargado.Models.Venta

@{
    ViewBag.Title = "Create";
}
@using MercaditoRecargado.Models;




<div class="container py-5 h-100">
    <div class="row justify-content-center align-items-center h-100">
        <div class="col-12 col-lg-9 col-xl-7">
            <div class="card shadow-2-strong card-registration" style="border-radius: 15px;">
                <div class="card-body p-4 p-md-5">
                    <h3 class="mb-4 pb-2 pb-md-0 mb-md-5">Verifica tu compra</h3>
                    <section>
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="row">
                                <div class="card shadow mb-4">
                                    <div class="card-header py-3">
                                        <h6 class="m-0 font-weight-bold text-primary">Mi carrito</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="table-responsive">
                                            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                                <thead>
                                                    <tr>
                                                        <th>Option</th>
                                                        <th>Id</th>
                                                        <th>Nombre</th>
                                                        <th>Imagen</th>
                                                        <th>Precio</th>
                                                        <th>Cantidad</th>
                                                        <th>Sub Total</th>
                                                    </tr>
                                                </thead>
                                                @foreach (Item item in (List<Item>)Session["cart"])
                                                {
                                                    <tbody>
                                                        <tr>
                                                            <td><a href="@Url.Action("Remove", "Cart", new { id = item.Producto.ProductoID })">Eliminar producto</a></td>
                                                            <td>@item.Producto.ProductoID</td>
                                                            <td>@item.Producto.nombre</td>
                                                            <td><img src="~/img/@item.Producto.Imagen" width="60" /> </td>
                                                            <td>$@item.Producto.Precio<small></small></td>
                                                            <td>@item.Quantity Kg</td>
                                                            <td>$@(item.Producto.Precio * item.Quantity)<small></small></td>
                                                        </tr>
                                                    </tbody>
                                                }
                                                <tfoot>
                                                    <tr>
                                                        <td align="right" colspan="6">Total</td>
                                                        <td>
                                                            @{
                                                                List<Item> cart = (List<Item>)Session["cart"];
                                                                var total = cart.Sum(item => item.Producto.Precio * item.Quantity);
                                                            }
                                                            $@total<small></small>
                                                        </td>
                                                    </tr>
                                                </tfoot>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <div class="form-outline">
                                        @Html.DropDownList("DireccionClienteID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.DireccionClienteID, "", new { @class = "text-danger" })
                                        <label for="form-label" class="form-label">Mis Direcciones</label> |  @Html.ActionLink("Agregar Dirección", "Create", "DireccionClientes")
                                    </div>

                                </div>
                                <div class="col-md-6 mb-4">
                                    <div class="form-outline">
                                        @Html.DropDownList("DatosTarjetaID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.DatosTarjetaID, "", new { @class = "text-danger" })
                                        <label for="form-label" class="form-label">Mis Tarjetas</label> |  @Html.ActionLink("Agregar Tarjeta", "Create", "DatosTarjetas")
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <div class="form-outline">
                                        @Html.EditorFor(m => m.FechaEntrega, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(m => m.FechaEntrega, "", new { @class = "text-danger" })
                                        <label for="form-label" class="form-label">Fecha de entrega</label>
                                    </div>

                                </div>
                                <div class="col-md-6 mb-4">
                                    <div class="form-outline">
                                        @Html.DropDownList("HoraEntrega", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.HoraEntrega, "", new { @class = "text-danger" })
                                        <label for="form-label" class="form-label">Selecciona el horario de entrega</label>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <div class="mt-4 pt-2">
                                        <a href="@Url.Action("ProductoCliente", "Productoes")">Continuar comprando</a>
                                    </div>

                                </div>
                                <div class="col-md-6 mb-4">
                                    <div class="mt-4 pt-2">
                                        <input class="btn btn-default btn-primary btn-lg" type="submit" value="Finalizar compra" />
                                    </div>
                                </div>
                            </div>
                            @*

                                <div class="form-group">
                                    @Html.LabelFor(model => model.DireccionClienteID, "Direcciones", htmlAttributes: new { @class = "control-label col-md-2" })|    @Html.ActionLink("Agregar Dirección", "Create", "DireccionClientes")
                                    <div class="col-md-10">
                                        @Html.DropDownList("DireccionClienteID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.DireccionClienteID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.DatosTarjetaID, "Tarjetas", htmlAttributes: new { @class = "control-label col-md-2" })|  @Html.ActionLink("Agregar Tarjeta", "Create", "DatosTarjetas")
                                    <div class="col-md-10">
                                        @Html.DropDownList("DatosTarjetaID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.DatosTarjetaID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <br>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.FechaEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(m => m.FechaEntrega, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(m => m.FechaEntrega, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <br>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.HoraEntrega, "Selecciona el horario de entrega", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("HoraEntrega", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.HoraEntrega, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@




                        }
                    </section>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script type="text/javascript">
    $(function () {
        var today = new Date();
        var month = ('0' + (today.getMonth() + 1)).slice(-2);
        var day = ('0' + today.getDate()).slice(-2);
        var day2 = ('0' + (today.getDate() + 1)).slice(-2);
        var year = today.getFullYear();
        var date = year + '-' + month + '-' + day;
        var dateMax = year + '-' + month + '-' + day2;
        $('[id*=FechaEntrega]').attr('min', date);
        $('[id*=FechaEntrega]').attr('max', dateMax);
        document.getElementById("HoraEntrega").disabled = true;
        $("#HoraEntrega").append("<option>Seleccione una fecha</option>");
    });

    $(function () {

        var hora;
        $("#FechaEntrega").change(function () {
            var today = new Date();
            var month = ('0' + (today.getMonth() + 1)).slice(-2);
            var day = ('0' + today.getDate()).slice(-2);
            var day2 = ('0' + (today.getDate() + 2)).slice(-2);
            var year = today.getFullYear();
            var date = year + '-' + month + '-' + day;
            if ($(this).val() === date) {

                document.getElementById("HoraEntrega").disabled = false;
                hora = today.getHours() * 60 + 60;

                populate('#HoraEntrega', hora);
            } else {
                document.getElementById("HoraEntrega").disabled = false;
                hora = 480;
                populate('#HoraEntrega', hora);
            }
        });
    });



    function populate(selector, hora) {
        var select = $(selector);
        var hours, hours2, minutes, ampm;
        select.empty();
        if (hora > 1030) {
            select.append('<option>No hay horario disponible, seleccione otra fecha</option>');
            select.attr('disabled', 'true');
        } else {
            select.removeAttr('disabled', 'false');
            for (var i = hora; i <= 1030; i += 60) {
                hours = Math.floor(i / 60);
                hours2 = Math.floor((i + 60) / 60);
                minutes = i % 60;
                if (minutes < 10) {
                    minutes = '0' + minutes; // adding leading zero to minutes portion
                }
                //add the value to dropdownlist
                select.append($('<option></option>')
                    .attr('value', hours + ':' + minutes)
                    .text(hours + ':' + minutes + "-" + hours2 + ':' + minutes));
            }
        }
    }
    (function dirtar() {
        var tarjeta = $("#DatosTarjetaID");
        var direccion = $("#DireccionClienteID");

        if (tarjeta.children().length === 0) {
            tarjeta.append('<option>Para continuar es necesario agregar una tarjeta</option>');
            tarjeta.attr('disabled', 'true');
        }
        if (direccion.children().length === 0) {
            direccion.append('<option>Para continuar es necesario agregar una direccion</option>');
            direccion.attr('disabled', 'true');
        }
    })();


    $("Form[action='/VentaDetalles/Create']").submit(function () {
        var flag = true;
        if ($("#DatosTarjetaID").is(':disabled')) {
            flag = false;
        }
        if ($("#DireccionClienteID").is(':disabled')) {
            flag = false;
        }
        return flag;
    });

</script>
